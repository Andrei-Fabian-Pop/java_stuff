ID: 5703
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5703
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 5703
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:

File Table:

Heap:

ID: 5703
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2

File Table:

Heap:

ID: 5703
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2
2

File Table:

Heap:

ID: 5703
Execution stack:
NopStatement

Symbol Table:
v: 2

Out:
2
2
2

File Table:

Heap:

ID: 7402
Execution stack:
Declaration{a: Int} -> Declaration{b: Int}
 -> Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
 -> Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
 -> Print{VariableExpression{b}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7402
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
Declaration{b: Int}

Symbol Table:
a: 0

Out:

File Table:

Heap:

ID: 7402
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}

Symbol Table:
a: 0
b: 0

Out:

File Table:

Heap:

ID: 7402
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}

Symbol Table:
a: 17
b: 0

Out:

File Table:

Heap:

ID: 7402
Execution stack:
NopStatement
Print{VariableExpression{b}}

Symbol Table:
a: 17
b: 18

Out:

File Table:

Heap:

ID: 7402
Execution stack:
NopStatement

Symbol Table:
a: 17
b: 18

Out:
18

File Table:

Heap:

ID: 4735
Execution stack:
Declaration{a: Bool} -> Declaration{v: Int}
 -> Assignment{a = ValueExpression{true}}
 -> if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
Assignment{a = ValueExpression{true}}
Declaration{v: Int}

Symbol Table:
a: false

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
Assignment{a = ValueExpression{true}}

Symbol Table:
a: false
v: 0

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}

Symbol Table:
a: true
v: 0

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
a: true
v: 0

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
a: true
v: 2

Out:

File Table:

Heap:

ID: 4735
Execution stack:
NopStatement

Symbol Table:
a: true
v: 2

Out:
2

File Table:

Heap:

ID: 6239
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{4}}
 -> While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 6239
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Assignment{v = ValueExpression{4}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 6239
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 4

Out:

File Table:

Heap:

ID: 4337
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:

File Table:

Heap:
d1c34dfd in 22

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:

File Table:

Heap:
d1c34dfd in 22

ID: 4377
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:

File Table:

Heap:
d1c34dfd in 22

ID: 4337
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:
10

File Table:

Heap:
d1c34dfd in 30

ID: 4377
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:
10

File Table:

Heap:
d1c34dfd in 30

ID: 4337
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 10

Out:
10
30

File Table:

Heap:
d1c34dfd in 30

ID: 4377
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 32

Out:
10
30

File Table:

Heap:
d1c34dfd in 30

ID: 4377
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
d1c34dfd in 30

ID: 4377
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{d1c34dfd in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
d1c34dfd in 30

ID: 1239
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7052
Execution stack:
Declaration{a: Int} -> Declaration{b: Int}
 -> Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
 -> Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
 -> Print{VariableExpression{b}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7052
Execution stack:
Declaration{a: Int} -> Declaration{b: Int}
 -> Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
 -> Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
 -> Print{VariableExpression{b}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 1916
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5614
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4418
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4418
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 4418
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:

File Table:

Heap:

ID: 4418
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2

File Table:

Heap:

ID: 4418
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2
2

File Table:

Heap:

ID: 4418
Execution stack:
NopStatement

Symbol Table:
v: 2

Out:
2
2
2

File Table:

Heap:

ID: 5407
Execution stack:
Declaration{varF: string} -> Assignment{varF = ValueExpression{test.in}}
 -> Open(r) file {VariableExpression{varF}}
 -> Declaration{x: Int}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> Close(r) file {VariableExpression{varF}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5407
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}
Assignment{varF = ValueExpression{test.in}}

Symbol Table:
varF: 

Out:

File Table:

Heap:

ID: 5407
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in

Out:

File Table:

Heap:

ID: 5951
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{4}}
 -> While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5951
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Assignment{v = ValueExpression{4}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 5951
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{false}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 4

Out:

File Table:

Heap:

ID: 4004
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{4}}
 -> While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Assignment{v = ValueExpression{4}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 4

Out:

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement


Symbol Table:
v: 4

Out:

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement
Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}

Symbol Table:
v: 4

Out:
4

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement

Symbol Table:
v: 3

Out:
4

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 3

Out:
4

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement


Symbol Table:
v: 3

Out:
4

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement
Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}

Symbol Table:
v: 3

Out:
4
3

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement

Symbol Table:
v: 2

Out:
4
3

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 2

Out:
4
3

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement


Symbol Table:
v: 2

Out:
4
3

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement
Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}

Symbol Table:
v: 2

Out:
4
3
2

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement

Symbol Table:
v: 1

Out:
4
3
2

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 1

Out:
4
3
2

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement


Symbol Table:
v: 1

Out:
4
3
2

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement
Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}

Symbol Table:
v: 1

Out:
4
3
2
1

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}
NopStatement

Symbol Table:
v: 0

Out:
4
3
2
1

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}
While (BinaryExpression{VariableExpression{v} MORE ValueExpression{0}}) {
	Print{VariableExpression{v}} -> Assignment{v = BinaryExpression{VariableExpression{v} SUBSTR ValueExpression{1}}}
 -> NopStatement

}

Symbol Table:
v: 0

Out:
4
3
2
1

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 0

Out:
4
3
2
1

File Table:

Heap:

ID: 4004
Execution stack:
NopStatement

Symbol Table:
v: 0

Out:
4
3
2
1
0

File Table:

Heap:

ID: 5062
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:

File Table:

Heap:
a52f0aea in 22

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:

File Table:

Heap:
a52f0aea in 22

ID: 5498
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:

File Table:

Heap:
a52f0aea in 22

ID: 5062
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:
10

File Table:

Heap:
a52f0aea in 30

ID: 5498
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:
10

File Table:

Heap:
a52f0aea in 30

ID: 5062
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 10

Out:
10
30

File Table:

Heap:
a52f0aea in 30

ID: 5498
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 32

Out:
10
30

File Table:

Heap:
a52f0aea in 30

ID: 5498
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
a52f0aea in 30

ID: 5498
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{a52f0aea in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
a52f0aea in 30

ID: 2091
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:

File Table:

Heap:
9f6de93a in 22

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:

File Table:

Heap:
9f6de93a in 22

ID: 2187
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:

File Table:

Heap:
9f6de93a in 22

ID: 2091
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:
10

File Table:

Heap:
9f6de93a in 30

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:
10

File Table:

Heap:
9f6de93a in 30

ID: 2091
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 10

Out:
10
30

File Table:

Heap:
9f6de93a in 30

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 32

Out:
10
30

File Table:

Heap:
9f6de93a in 30

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
9f6de93a in 30

ID: 2187
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{9f6de93a in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
9f6de93a in 30

ID: 3551
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3551
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 3551
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:

File Table:

Heap:

ID: 3551
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2

File Table:

Heap:

ID: 3551
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2
2

File Table:

Heap:

ID: 3551
Execution stack:
NopStatement

Symbol Table:
v: 2

Out:
2
2
2

File Table:

Heap:

ID: 5004
Execution stack:
Declaration{a: Int} -> Declaration{b: Int}
 -> Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
 -> Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
 -> Print{VariableExpression{b}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5004
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}
Declaration{b: Int}

Symbol Table:
a: 0

Out:

File Table:

Heap:

ID: 5004
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}
Assignment{a = BinaryExpression{ValueExpression{2} ADD BinaryExpression{ValueExpression{3} MULT ValueExpression{5}}}}

Symbol Table:
a: 0
b: 0

Out:

File Table:

Heap:

ID: 5004
Execution stack:
NopStatement
Print{VariableExpression{b}}
Assignment{b = BinaryExpression{VariableExpression{a} ADD ValueExpression{1}}}

Symbol Table:
a: 17
b: 0

Out:

File Table:

Heap:

ID: 5004
Execution stack:
NopStatement
Print{VariableExpression{b}}

Symbol Table:
a: 17
b: 18

Out:

File Table:

Heap:

ID: 5004
Execution stack:
NopStatement

Symbol Table:
a: 17
b: 18

Out:
18

File Table:

Heap:

ID: 3670
Execution stack:
Declaration{a: Bool} -> Declaration{v: Int}
 -> Assignment{a = ValueExpression{true}}
 -> if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3670
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
Assignment{a = ValueExpression{true}}
Declaration{v: Int}

Symbol Table:
a: false

Out:

File Table:

Heap:

ID: 3670
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}
Assignment{a = ValueExpression{true}}

Symbol Table:
a: false
v: 0

Out:

File Table:

Heap:

ID: 3670
Execution stack:
NopStatement
Print{VariableExpression{v}}
if(VariableExpression{a}){
	Assignment{v = ValueExpression{2}}
}else{
	Assignment{v = ValueExpression{3}}
}

Symbol Table:
a: true
v: 0

Out:

File Table:

Heap:

ID: 3670
Execution stack:
NopStatement
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
a: true
v: 0

Out:

File Table:

Heap:

ID: 3670
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
a: true
v: 2

Out:

File Table:

Heap:

ID: 5746
Execution stack:
Declaration{varF: string} -> Assignment{varF = ValueExpression{test.in}}
 -> Open(r) file {VariableExpression{varF}}
 -> Declaration{x: Int}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> Close(r) file {VariableExpression{varF}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5746
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}
Assignment{varF = ValueExpression{test.in}}

Symbol Table:
varF: 

Out:

File Table:

Heap:

ID: 5746
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in

Out:

File Table:

Heap:

ID: 2005
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:

File Table:

Heap:
caed173a in 22

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:

File Table:

Heap:
caed173a in 22

ID: 9640
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:

File Table:

Heap:
caed173a in 22

ID: 2005
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:
10

File Table:

Heap:
caed173a in 30

ID: 9640
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:
10

File Table:

Heap:
caed173a in 30

ID: 2005
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 10

Out:
10
30

File Table:

Heap:
caed173a in 30

ID: 9640
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 32

Out:
10
30

File Table:

Heap:
caed173a in 30

ID: 9640
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
caed173a in 30

ID: 9640
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{caed173a in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
caed173a in 30

ID: 2187
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:

File Table:

Heap:
b536fecd in 22

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:

File Table:

Heap:
b536fecd in 22

ID: 6197
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:

File Table:

Heap:
b536fecd in 22

ID: 2187
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:
10

File Table:

Heap:
b536fecd in 30

ID: 6197
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:
10

File Table:

Heap:
b536fecd in 30

ID: 2187
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 10

Out:
10
30

File Table:

Heap:
b536fecd in 30

ID: 6197
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 32

Out:
10
30

File Table:

Heap:
b536fecd in 30

ID: 6197
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
b536fecd in 30

ID: 6197
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{b536fecd in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
b536fecd in 30

ID: 5109
Execution stack:
Declaration{varF: string} -> Assignment{varF = ValueExpression{test.in}}
 -> Open(r) file {VariableExpression{varF}}
 -> Declaration{x: Int}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> Close(r) file {VariableExpression{varF}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}
Assignment{varF = ValueExpression{test.in}}

Symbol Table:
varF: 

Out:

File Table:

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in

Out:

File Table:

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}

Symbol Table:
varF: test.in

Out:

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 0

Out:

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 100

Out:

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 100

Out:
100

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 99

Out:
100

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:
test.in

Heap:

ID: 5109
Execution stack:
NopStatement

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:

Heap:

ID: 8043
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 8043
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 8043
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:

File Table:

Heap:

ID: 8043
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2

File Table:

Heap:

ID: 8043
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2
2

File Table:

Heap:

ID: 8043
Execution stack:
NopStatement

Symbol Table:
v: 2

Out:
2
2
2

File Table:

Heap:

ID: 7720
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{57434611 in Int}
v: 10

Out:

File Table:

Heap:
57434611 in 22

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{57434611 in Int}
v: 10

Out:

File Table:

Heap:
57434611 in 22

ID: 8587
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{57434611 in Int}
v: 10

Out:

File Table:

Heap:
57434611 in 22

ID: 7720
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{57434611 in Int}
v: 10

Out:
10

File Table:

Heap:
57434611 in 30

ID: 8587
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{57434611 in Int}
v: 10

Out:
10

File Table:

Heap:
57434611 in 30

ID: 7922
Execution stack:
Declaration{varF: string} -> Assignment{varF = ValueExpression{test.in}}
 -> Open(r) file {VariableExpression{varF}}
 -> Declaration{x: Int}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> Close(r) file {VariableExpression{varF}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}
Assignment{varF = ValueExpression{test.in}}

Symbol Table:
varF: 

Out:

File Table:

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in

Out:

File Table:

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}

Symbol Table:
varF: test.in

Out:

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 0

Out:

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 100

Out:

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 100

Out:
100

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 99

Out:
100

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:
test.in

Heap:

ID: 7922
Execution stack:
NopStatement

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:

Heap:

ID: 4324
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:

File Table:

Heap:
3387edce in 22

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:

File Table:

Heap:
3387edce in 22

ID: 9825
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:

File Table:

Heap:
3387edce in 22

ID: 4324
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:
10

File Table:

Heap:
3387edce in 30

ID: 9825
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:
10

File Table:

Heap:
3387edce in 30

ID: 4324
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 10

Out:
10
30

File Table:

Heap:
3387edce in 30

ID: 9825
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 32

Out:
10
30

File Table:

Heap:
3387edce in 30

ID: 9825
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
3387edce in 30

ID: 9825
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{3387edce in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
3387edce in 30

ID: 3347
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:

File Table:

Heap:
4cd65e52 in 22

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:

File Table:

Heap:
4cd65e52 in 22

ID: 9401
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:

File Table:

Heap:
4cd65e52 in 22

ID: 3347
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:
10

File Table:

Heap:
4cd65e52 in 30

ID: 9401
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:
10

File Table:

Heap:
4cd65e52 in 30

ID: 3347
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 10

Out:
10
30

File Table:

Heap:
4cd65e52 in 30

ID: 9401
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 32

Out:
10
30

File Table:

Heap:
4cd65e52 in 30

ID: 9401
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
4cd65e52 in 30

ID: 9401
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{4cd65e52 in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
4cd65e52 in 30

ID: 7949
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:

File Table:

Heap:
90b1f826 in 22

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:

File Table:

Heap:
90b1f826 in 22

ID: 9192
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:

File Table:

Heap:
90b1f826 in 22

ID: 7949
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:
10

File Table:

Heap:
90b1f826 in 30

ID: 9192
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:
10

File Table:

Heap:
90b1f826 in 30

ID: 7949
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 10

Out:
10
30

File Table:

Heap:
90b1f826 in 30

ID: 9192
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 32

Out:
10
30

File Table:

Heap:
90b1f826 in 30

ID: 9192
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
90b1f826 in 30

ID: 9192
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{90b1f826 in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
90b1f826 in 30

ID: 2514
Execution stack:
Declaration{v: Reference(Int)} -> New{v: ValueExpression{20}}
 -> Print{ReadHeap{VariableExpression{v}}}
 -> WriteHeap{v: ValueExpression{30}}
 -> Print{BinaryExpression{ReadHeap{VariableExpression{v}} ADD ValueExpression{5}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2514
Execution stack:
NopStatement
Print{BinaryExpression{ReadHeap{VariableExpression{v}} ADD ValueExpression{5}}}
WriteHeap{v: ValueExpression{30}}
Print{ReadHeap{VariableExpression{v}}}
New{v: ValueExpression{20}}

Symbol Table:
v: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2514
Execution stack:
NopStatement
Print{BinaryExpression{ReadHeap{VariableExpression{v}} ADD ValueExpression{5}}}
WriteHeap{v: ValueExpression{30}}
Print{ReadHeap{VariableExpression{v}}}

Symbol Table:
v: ReferenceValue{43bf9a15 in Int}

Out:

File Table:

Heap:
43bf9a15 in 20

ID: 2514
Execution stack:
NopStatement
Print{BinaryExpression{ReadHeap{VariableExpression{v}} ADD ValueExpression{5}}}
WriteHeap{v: ValueExpression{30}}

Symbol Table:
v: ReferenceValue{43bf9a15 in Int}

Out:
20

File Table:

Heap:
43bf9a15 in 20

ID: 2514
Execution stack:
NopStatement
Print{BinaryExpression{ReadHeap{VariableExpression{v}} ADD ValueExpression{5}}}

Symbol Table:
v: ReferenceValue{43bf9a15 in Int}

Out:
20

File Table:

Heap:
43bf9a15 in 30

ID: 2514
Execution stack:
NopStatement

Symbol Table:
v: ReferenceValue{43bf9a15 in Int}

Out:
20
35

File Table:

Heap:
43bf9a15 in 30

ID: 8663
Execution stack:
Declaration{varF: string} -> Assignment{varF = ValueExpression{test.in}}
 -> Open(r) file {VariableExpression{varF}}
 -> Declaration{x: Int}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> ReadFile {VariableExpression{varF}: x}
 -> Print{VariableExpression{x}}
 -> Close(r) file {VariableExpression{varF}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}
Assignment{varF = ValueExpression{test.in}}

Symbol Table:
varF: 

Out:

File Table:

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}
Open(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in

Out:

File Table:

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Declaration{x: Int}

Symbol Table:
varF: test.in

Out:

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 0

Out:

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 100

Out:

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}
ReadFile {VariableExpression{varF}: x}

Symbol Table:
varF: test.in
x: 100

Out:
100

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}
Print{VariableExpression{x}}

Symbol Table:
varF: test.in
x: 99

Out:
100

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement
Close(r) file {VariableExpression{varF}}

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:
test.in

Heap:

ID: 8663
Execution stack:
NopStatement

Symbol Table:
varF: test.in
x: 99

Out:
100
99

File Table:

Heap:

ID: 2577
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:

File Table:

Heap:
e06ed37d in 22

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:

File Table:

Heap:
e06ed37d in 22

ID: 8644
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:

File Table:

Heap:
e06ed37d in 22

ID: 2577
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:
10

File Table:

Heap:
e06ed37d in 30

ID: 8644
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:
10

File Table:

Heap:
e06ed37d in 30

ID: 2577
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 10

Out:
10
30

File Table:

Heap:
e06ed37d in 30

ID: 8644
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 32

Out:
10
30

File Table:

Heap:
e06ed37d in 30

ID: 8644
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
e06ed37d in 30

ID: 8644
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{e06ed37d in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
e06ed37d in 30

ID: 6812
Execution stack:
Declaration{v: Int} -> Assignment{v = ValueExpression{2}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> Print{VariableExpression{v}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 6812
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{2}}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 6812
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:

File Table:

Heap:

ID: 6812
Execution stack:
NopStatement
Print{VariableExpression{v}}
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2

File Table:

Heap:

ID: 6812
Execution stack:
NopStatement
Print{VariableExpression{v}}

Symbol Table:
v: 2

Out:
2
2

File Table:

Heap:

ID: 6812
Execution stack:
NopStatement

Symbol Table:
v: 2

Out:
2
2
2

File Table:

Heap:

ID: 6893
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:

File Table:

Heap:
dec1c760 in 22

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:

File Table:

Heap:
dec1c760 in 22

ID: 1587
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:

File Table:

Heap:
dec1c760 in 22

ID: 6893
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:
10

File Table:

Heap:
dec1c760 in 30

ID: 1587
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:
10

File Table:

Heap:
dec1c760 in 30

ID: 6893
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 10

Out:
10
30

File Table:

Heap:
dec1c760 in 30

ID: 1587
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{dec1c760 in Int}
v: 32

Out:
10
30

File Table:

Heap:
dec1c760 in 30

ID: 3330
Execution stack:
Declaration{v: Int} -> Declaration{a: Reference(Int)}
 -> Assignment{v = ValueExpression{10}}
 -> New{a: ValueExpression{22}}
 -> Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}
Declaration{a: Reference(Int)}

Symbol Table:
v: 0

Out:

File Table:

Heap:

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}
Assignment{v = ValueExpression{10}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 0

Out:

File Table:

Heap:

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}
New{a: ValueExpression{22}}

Symbol Table:
a: ReferenceValue{0 in Int}
v: 10

Out:

File Table:

Heap:

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Fork{
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement

}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:

File Table:

Heap:
4dcaaf35 in 22

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:

File Table:

Heap:
4dcaaf35 in 22

ID: 9013
Execution stack:
WriteHeap{a: ValueExpression{30}} -> Assignment{v = ValueExpression{32}}
 -> Print{VariableExpression{v}}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:

File Table:

Heap:
4dcaaf35 in 22

ID: 3330
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:
10

File Table:

Heap:
4dcaaf35 in 30

ID: 9013
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}
Assignment{v = ValueExpression{32}}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:
10

File Table:

Heap:
4dcaaf35 in 30

ID: 3330
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 10

Out:
10
30

File Table:

Heap:
4dcaaf35 in 30

ID: 9013
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Print{VariableExpression{v}}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 32

Out:
10
30

File Table:

Heap:
4dcaaf35 in 30

ID: 9013
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 32

Out:
10
30
32

File Table:

Heap:
4dcaaf35 in 30

ID: 9013
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{4dcaaf35 in Int}
v: 32

Out:
10
30
32
30

File Table:

Heap:
4dcaaf35 in 30

ID: 1103
Execution stack:
Declaration{a: Reference(Int)} -> New{a: ValueExpression{20}}
 -> for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 1103
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}
New{a: ValueExpression{20}}

Symbol Table:
a: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 1103
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}

Symbol Table:
a: ReferenceValue{21b19d94 in Int}

Out:

File Table:

Heap:
21b19d94 in 20

ID: 1103
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Declaration{i: Int}
Assignment{i = ValueExpression{0}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{21b19d94 in Int}

Out:

File Table:

Heap:
21b19d94 in 20

ID: 6001
Execution stack:
Declaration{a: Reference(Int)} -> New{a: ValueExpression{20}}
 -> for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 6001
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}
New{a: ValueExpression{20}}

Symbol Table:
a: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 6001
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}

Symbol Table:
a: ReferenceValue{df5a2895 in Int}

Out:

File Table:

Heap:
df5a2895 in 20

ID: 6001
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
Declaration{i: Int}
Assignment{i = ValueExpression{0}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{df5a2895 in Int}

Out:

File Table:

Heap:
df5a2895 in 20

ID: 9173
Execution stack:
Declaration{a: Reference(Int)} -> New{a: ValueExpression{20}}
 -> for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}
New{a: ValueExpression{20}}

Symbol Table:
a: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Print{VariableExpression{i}}
}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}

Out:

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = ValueExpression{0}}
Declaration{i: Int}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}

Out:

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = ValueExpression{0}}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 0

Out:

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 0

Out:

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 0

Out:

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 0

Out:
0

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 1

Out:
0

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 1

Out:
0

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 1

Out:
0
1

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 2

Out:
0
1

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 2

Out:
0
1

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 2

Out:
0
1
2

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 3

Out:
0
1
2

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 3

Out:
0
1
2

File Table:

Heap:
2cb48ad in 20

ID: 9173
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{2cb48ad in Int}
i: 3

Out:
0
1
2
20

File Table:

Heap:
2cb48ad in 20

ID: 4164
Execution stack:
Declaration{a: Reference(Int)} -> New{a: ValueExpression{20}}
 -> for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}
 -> Print{ReadHeap{VariableExpression{a}}}
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}
New{a: ValueExpression{20}}

Symbol Table:
a: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
for (int i = ValueExpression{0}; i < ValueExpression{3}; i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

}
}

Symbol Table:
a: ReferenceValue{800d505c in Int}

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = ValueExpression{0}}
Declaration{i: Int}

Symbol Table:
a: ReferenceValue{800d505c in Int}

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = ValueExpression{0}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:

File Table:

Heap:
800d505c in 20

ID: 8060
Execution stack:
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 1

Out:
0

File Table:

Heap:
800d505c in 20

ID: 8060
Execution stack:
NopStatement
Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:
0

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 1

Out:
0

File Table:

Heap:
800d505c in 20

ID: 8060
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 0

Out:
0

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 1

Out:
0

File Table:

Heap:
800d505c in 20

ID: 7986
Execution stack:
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 1

Out:
0

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 2

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 7986
Execution stack:
NopStatement
Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 1

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 2

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 7986
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 20

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}
Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 2

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 1020
Execution stack:
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement


Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 2

Out:
0
1

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}
While (BinaryExpression{VariableExpression{i} LESS ValueExpression{3}}) {
	Fork{
Print{VariableExpression{i}} -> Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}
 -> NopStatement

} -> Assignment{i = BinaryExpression{VariableExpression{i} ADD ValueExpression{1}}}

}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 3

Out:
0
1
2

File Table:

Heap:
800d505c in 20

ID: 1020
Execution stack:
NopStatement
Assignment{i = BinaryExpression{VariableExpression{i} MULT ReadHeap{VariableExpression{a}}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 2

Out:
0
1
2

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement
Print{ReadHeap{VariableExpression{a}}}

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 3

Out:
0
1
2

File Table:

Heap:
800d505c in 20

ID: 1020
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 40

Out:
0
1
2

File Table:

Heap:
800d505c in 20

ID: 4164
Execution stack:
NopStatement

Symbol Table:
a: ReferenceValue{800d505c in Int}
i: 3

Out:
0
1
2
20

File Table:

Heap:
800d505c in 20

ID: 2860
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{72c95614 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
72c95614 in 20

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 5355
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 4504
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 4504
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 7079
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 30

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 4504
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7079
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7151
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 4504
Execution stack:
NopStatement

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7079
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7151
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7079
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7151
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 2860
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 5355
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7079
Execution stack:
NopStatement

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 7151
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: -8689
x: -8689
v1: ReferenceValue{4c0b5292 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0b5292 in 29

ID: 9965
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{77222699 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
77222699 in 20

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 3504
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 3504
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 6940
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 3504
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 6940
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 1398
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 30

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 3504
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 6940
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 8171
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 3504
Execution stack:
NopStatement

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 6940
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 300

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 6940
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 6940
Execution stack:
NopStatement

Symbol Table:
q: 0
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
2e26d15c in 299

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 9965
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 1398
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 8171
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: -3673
x: -3673
v1: ReferenceValue{2e26d15c in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
2e26d15c in 299

ID: 1906
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{346337f in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
346337f in 20

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 2400
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 2400
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 8105
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 2400
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 8105
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1369
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 30

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 2400
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 8105
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 1369
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 7089
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 1906
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 2400
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 8105
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 1369
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 7089
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 7192
x: 6477
v1: ReferenceValue{48574642 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
48574642 in 29

ID: 3703
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{ddc335a7 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ddc335a7 in 20

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 1777
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 1777
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 1797
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 1777
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 1797
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 9037
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 30

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 1777
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 1797
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 9037
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 8574
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 3703
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 1777
Execution stack:
NopStatement

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 1797
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 9037
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 8574
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 1851
x: -1100
v1: ReferenceValue{173fdbf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
173fdbf in 300

ID: 5791
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{44c7b52a in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
44c7b52a in 20

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 8940
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 8940
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5715
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 8940
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5715
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5879
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 30

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 8940
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5715
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5879
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 4537
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 8940
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5715
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5879
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 4537
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5715
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5879
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 4537
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 300

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5715
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5879
Execution stack:
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 4537
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5715
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 4537
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 4537
Execution stack:
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
ce197a08 in 299

ID: 5791
Execution stack:
NopStatement

Symbol Table:
q: 2165
x: 2075
v1: ReferenceValue{ce197a08 in Int}
v2: ReferenceValue{0 in Int}

Out:
299

File Table:

Heap:
ce197a08 in 299

ID: 6653
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v1: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v1: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{eab62a99 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
eab62a99 in 20

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6511
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6511
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6240
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6511
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6240
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 7358
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 30

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 6511
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 6240
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 7358
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 7492
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 6653
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 6511
Execution stack:
NopStatement

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 6240
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 7358
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 7492
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 9458
x: -7506
v1: ReferenceValue{f289e7f0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
f289e7f0 in 300

ID: 2094
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v2: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 9685
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 9685
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 6965
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 9685
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 6965
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 1505
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 20

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 9685
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 6965
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 1505
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 7157
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 9685
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 6965
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 1505
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 7157
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 30
4c0693b9 in 200

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 200

ID: 6965
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 200

ID: 1505
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 200

ID: 7157
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 200

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 199

ID: 6965
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 199

ID: 1505
Execution stack:
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 199

ID: 7157
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 300
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 6965
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 7157
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 7157
Execution stack:
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:
199

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:
199

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:
199

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:
199
305

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 2094
Execution stack:
NopStatement

Symbol Table:
q: -7539
x: 3856
v1: ReferenceValue{4c0693b9 in Int}
v2: ReferenceValue{4211f923 in Int}

Out:
199
305

File Table:

Heap:
4211f923 in 305
4c0693b9 in 199

ID: 5478
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v2: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 4065
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 4065
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 7718
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 4065
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 7718
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 8198
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 20

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 4065
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 7718
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 8198
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 8845
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 5478
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 4065
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 7718
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 8198
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 8845
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: 5682
x: 9015
v1: ReferenceValue{437b23cd in Int}
v2: ReferenceValue{2e01691a in Int}

Out:

File Table:

Heap:
2e01691a in 30
437b23cd in 19

ID: 4724
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v2: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 6999
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 6999
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 1497
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 6999
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 1497
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 1626
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 20

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 6999
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1497
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1626
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1115
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 6999
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1497
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
Lock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1626
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 1115
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 30
e96a4712 in 200

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 200

ID: 1497
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 200

ID: 1626
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 200

ID: 1115
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 200

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 199

ID: 1497
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 199

ID: 1626
Execution stack:
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 199

ID: 1115
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 300
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 1497
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 1115
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 1115
Execution stack:
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:
199

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:
199

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:
199

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:
199
305

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 4724
Execution stack:
NopStatement

Symbol Table:
q: -2639
x: 9029
v1: ReferenceValue{e96a4712 in Int}
v2: ReferenceValue{987eed1a in Int}

Out:
199
305

File Table:

Heap:
987eed1a in 305
e96a4712 in 199

ID: 3409
Execution stack:
Declaration{v1: Reference(Int)} -> Declaration{v2: Reference(Int)}
 -> Declaration{x: Int}
 -> Declaration{q: Int}
 -> New{v1: ValueExpression{20}}
 -> New{v2: ValueExpression{30}}
 -> Lock{x}
 -> Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
 -> Lock{q}
 -> Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> NopStatement
 -> Lock(x)
 -> Print{ReadHeap{VariableExpression{v1}}}
 -> Unlock(x)
 -> Lock(q)
 -> Print{ReadHeap{VariableExpression{v2}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:

Out:

File Table:

Heap:

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}
Declaration{v2: Reference(Int)}

Symbol Table:
v1: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}
Declaration{x: Int}

Symbol Table:
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}
Declaration{q: Int}

Symbol Table:
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}
New{v1: ValueExpression{20}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{0 in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}
New{v2: ValueExpression{30}}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{0 in Int}

Out:

File Table:

Heap:
221083cf in 20

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}
Lock{x}

Symbol Table:
q: 0
x: 0
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}
Fork{
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement

}

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}
Lock{q}

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 5934
Execution stack:
Fork{
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement

} -> Lock(x)
 -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement
Fork{
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement

}

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 5934
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 8114
Execution stack:
Lock(x) -> WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}
 -> Unlock(x)
 -> NopStatement


Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 5934
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 8114
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} SUBSTR ValueExpression{1}}}

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 5951
Execution stack:
Fork{
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement

} -> Lock(q)
 -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 20
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 5934
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 8114
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 5951
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}
Lock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 4582
Execution stack:
Lock(q) -> WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
 -> Unlock(q)
 -> NopStatement


Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 5934
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}
Lock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 8114
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 5951
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} MULT ValueExpression{10}}}

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 4582
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 30

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 300

ID: 5934
Execution stack:
NopStatement
Unlock(x)
WriteHeap{v1: BinaryExpression{ReadHeap{VariableExpression{v1}} MULT ValueExpression{10}}}

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 300

ID: 5951
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 300

ID: 4582
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}
Lock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 19
8dc0ead0 in 300

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 300

ID: 5934
Execution stack:
NopStatement
Unlock(x)

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 300

ID: 5951
Execution stack:
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 300

ID: 4582
Execution stack:
NopStatement
Unlock(q)
WriteHeap{v2: BinaryExpression{ReadHeap{VariableExpression{v2}} ADD ValueExpression{5}}}

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 300

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}
Lock(x)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 5934
Execution stack:
NopStatement

Symbol Table:
q: 0
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 4582
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)
Print{ReadHeap{VariableExpression{v1}}}

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 4582
Execution stack:
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)
Unlock(x)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:
190

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}
Lock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:
190

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement
Unlock(q)
Print{ReadHeap{VariableExpression{v2}}}

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:
190

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement
Unlock(q)

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:
190
305

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

ID: 3409
Execution stack:
NopStatement

Symbol Table:
q: -3943
x: 1826
v1: ReferenceValue{221083cf in Int}
v2: ReferenceValue{8dc0ead0 in Int}

Out:
190
305

File Table:

Heap:
221083cf in 190
8dc0ead0 in 305

